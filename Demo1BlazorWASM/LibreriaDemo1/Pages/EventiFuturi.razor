@page "/eventifuturi"
@inject IDatiEventi dati

<div class="jumbotron">
    <h3>Eventi Futuri</h3>
</div>

@if (EventoCorrente == null)
{
    <ListaEventi Eventi="Eventi" Titolo="Elenco prossimi eventi"
                 OnCrea="CreaEvento" OnModifica="Modifica"
                 OnElimina="EliminaDaEventiFuturi" />
} else
{
    <DettaglioEvento TItem="Evento" Item="EventoCorrente"
                     OnSalva="Salva" OnAnnulla="Annulla">
        <CampiDelForm Context="eventocorrente">
            <MyInputText Id="nome" Label="Nome" @bind-Value="eventocorrente.Nome"></MyInputText>
            <MyInputText Id="localita" Label="Localita" @bind-Value="eventocorrente.Localita"></MyInputText>
            <MyInputDate Id="data" Label="Data" @bind-Value="eventocorrente.Data"></MyInputDate>
            <MyInputText Id="descrizione" Label="Descrizione" @bind-Value="eventocorrente.Descrizione"></MyInputText>
            <MyInputTextArea Id="note" Label="Note" @bind-Value="eventocorrente.Note"></MyInputTextArea>
        </CampiDelForm>
    </DettaglioEvento>
}




@code {
    public List<ElementoListaEventi> Eventi { get; set; } = new List<ElementoListaEventi>();
    public Evento EventoCorrente { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Eventi = await dati.EstraiEventiDaAPI();
    }


    public async Task EliminaDaEventiFuturi(ElementoListaEventi evento)
    {
        await dati.EliminaEvento(evento.Id);
        Eventi = await dati.EstraiEventiDaAPI();
    }

    public void CreaEvento()
    {
        EventoCorrente = new Evento { Data = DateTime.Today };
    }

    public async Task Modifica(ElementoListaEventi eventoDaModificare)
    {
        EventoCorrente = await dati.EstraiEventoPerID(eventoDaModificare.Id);
    }

    public void Annulla()
    {
        EventoCorrente = null;
    }

    public async Task Salva(Evento evento)
    {
        if(evento.Id == 0)
        {
            await dati.CreaEvento(evento);

        } else
        {
            await dati.ModificaEvento(evento);
        }
        Eventi = await dati.EstraiEventiDaAPI();
        EventoCorrente = null;
    }


}
